{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAK,EAAM,gBAAgB,CAAC,MAC5B,EAAQ,EAAM,aAAa,CAAC,SAElC,EAAG,OAAO,CAAC,SAAC,CAAA,CAAQ,CAApB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAE/B,IAAM,EAAa,AADL,EAAG,EAAM,IAAI,EACH,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GACvC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,UAE7C,AAAI,EAAM,QAAQ,CAAC,KAIV,AAHQ,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,QAAS,KAI1C,EAAQ,EAAQ,EAAI,EAAQ,EAAQ,GAAK,CAEpD,GAEA,AAAA,EAAM,MAAM,CAAZ,KAAA,CAAA,EAAa,EAAG,GAClB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar th = table.querySelectorAll(\"th\");\nvar tBody = table.querySelector(\"tbody\");\nth.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var _tBody;\n        var rows = _to_consumable_array(tBody.rows);\n        var sortedRows = rows.sort(function(a, b) {\n            var aText = a.cells[index].textContent.trim();\n            var bText = b.cells[index].textContent.trim();\n            if (aText.includes(\"$\")) {\n                var aValue = parseFloat(aText.replace(/[$,]/g, \"\"));\n                var bValue = parseFloat(bText.replace(/[$,]/g, \"\"));\n                return aValue - bValue;\n            } else return aText > bText ? 1 : aText < bText ? -1 : 0;\n        });\n        (_tBody = tBody).append.apply(_tBody, _to_consumable_array(sortedRows));\n    });\n});\n\n//# sourceMappingURL=index.bcf30589.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst th = table.querySelectorAll('th');\nconst tBody = table.querySelector('tbody');\n\nth.forEach((header, index) => {\n  header.addEventListener('click', function () {\n    const rows = [...tBody.rows];\n    const sortedRows = rows.sort((a, b) => {\n      const aText = a.cells[index].textContent.trim();\n      const bText = b.cells[index].textContent.trim();\n\n      if (aText.includes('$')) {\n        const aValue = parseFloat(aText.replace(/[$,]/g, ''));\n        const bValue = parseFloat(bText.replace(/[$,]/g, ''));\n\n        return aValue - bValue;\n      } else {\n        return aText > bText ? 1 : aText < bText ? -1 : 0;\n      }\n    });\n\n    tBody.append(...sortedRows);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","th","querySelectorAll","tBody","forEach","header","index","addEventListener","sortedRows","rows","sort","a","b","aText","cells","textContent","trim","bText","includes","aValue","parseFloat","replace","append","apply"],"version":3,"file":"index.bcf30589.js.map"}